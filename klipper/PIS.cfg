[mcu PIS]
# Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_rp2040_E66118F5D72B6136-if00  

restart_method: command

[temperature_sensor PIS_temp]
sensor_type: temperature_mcu
sensor_mcu: PIS
gcode_id: chamber

[adxl345]
cs_pin: PIS:gpio13
#spi_bus: spi1a
spi_software_sclk_pin: PIS:gpio10
spi_software_mosi_pin: PIS:gpio11
spi_software_miso_pin: PIS:gpio12
#Choose correct mapping position fo current test and orientation
#axes_map: z,-x,-y #X Mount Left Side of Extruder (Cable Up USB Left)
#axes_map: x,y,z #Y Mount Flat (Cable Forward USB Up)
#axes_map: x,-z,y #Y Mount Front (Cable Up USB Forward)
axes_map: x,z,-y #new test

[resonance_tester]
accel_chip: adxl345
max_freq: 100
probe_points:
    133,112,20 # an example

[led PIS_led]
red_pin: !PIS:gpio25
#green_pin:
#blue_pin:
#white_pin:
cycle_time: 0.00166 #0.001
hardware_pwm: True
initial_RED: 0.020
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0

[gcode_macro M300.3] # LCD Light Control
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_LED LED=PIS_led red=0.255
    SET_PIN PIN=_BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=_BEEPER_pin VALUE=0
    SET_LED LED=PIS_led red=0.020

